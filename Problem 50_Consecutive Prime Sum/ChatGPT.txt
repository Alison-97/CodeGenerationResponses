using System;

class Program
{
    static void Main(string[] args)
    {
        int limit = 1000000;
        int[] primes = GeneratePrimes(limit);
        
        int maxLength = 0;
        int resultPrime = 0;

        for (int i = 0; i < primes.Length; i++)
        {
            int sum = primes[i];
            int length = 1;

            for (int j = i + 1; j < primes.Length; j++)
            {
                sum += primes[j];
                length++;

                if (sum >= limit)
                    break;

                if (IsPrime(sum) && length > maxLength)
                {
                    maxLength = length;
                    resultPrime = sum;
                }
            }
        }

        Console.WriteLine("The prime below one million that can be written as the sum of the most consecutive primes is: " + resultPrime);
    }

    static bool IsPrime(int number)
    {
        if (number <= 1)
            return false;

        for (int i = 2; i <= Math.Sqrt(number); i++)
        {
            if (number % i == 0)
                return false;
        }

        return true;
    }

    static int[] GeneratePrimes(int limit)
    {
        bool[] isComposite = new bool[limit + 1];

        for (int i = 2; i * i <= limit; i++)
        {
            if (!isComposite[i])
            {
                for (int j = i * i; j <= limit; j += i)
                {
                    isComposite[j] = true;
                }
            }
        }

        int count = 0;
        for (int i = 2; i <= limit; i++)
        {
            if (!isComposite[i])
                count++;
        }

        int[] primes = new int[count];
        int index = 0;

        for (int i = 2; i <= limit; i++)
        {
            if (!isComposite[i])
                primes[index++] = i;
        }

        return primes;
    }
}
