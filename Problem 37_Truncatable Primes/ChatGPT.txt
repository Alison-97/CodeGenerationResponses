using System;
using System.Collections.Generic;

public class Program
{
    public static void Main()
    {
        List<int> truncatablePrimes = new List<int>();
        int num = 11; // Starting from 11, as the primes 2, 3, 5, and 7 are not considered truncatable
        
        while (truncatablePrimes.Count < 11)
        {
            if (IsTruncatablePrime(num))
            {
                truncatablePrimes.Add(num);
            }
            
            num++;
        }
        
        int sum = 0;
        foreach (int prime in truncatablePrimes)
        {
            sum += prime;
        }
        
        Console.WriteLine("Sum of truncatable primes: " + sum);
    }
    
    public static bool IsTruncatablePrime(int num)
    {
        if (!IsPrime(num))
        {
            return false;
        }
        
        // Check truncation from left to right
        string numStr = num.ToString();
        for (int i = 1; i < numStr.Length; i++)
        {
            int truncLeft = int.Parse(numStr.Substring(i));
            if (!IsPrime(truncLeft))
            {
                return false;
            }
        }
        
        // Check truncation from right to left
        for (int i = numStr.Length - 1; i > 0; i--)
        {
            int truncRight = int.Parse(numStr.Substring(0, i));
            if (!IsPrime(truncRight))
            {
                return false;
            }
        }
        
        return true;
    }
    
    public static bool IsPrime(int num)
    {
        if (num < 2)
        {
            return false;
        }
        
        for (int i = 2; i <= Math.Sqrt(num); i++)
        {
            if (num % i == 0)
            {
                return false;
            }
        }
        
        return true;
    }
}
