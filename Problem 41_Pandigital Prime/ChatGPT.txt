using System;
using System.Collections.Generic;

public class Program
{
    public static void Main()
    {
        int n = 9; // Maximum number of digits for pandigital number
        
        while (n > 1)
        {
            List<int> digits = new List<int>();
            for (int i = 1; i <= n; i++)
            {
                digits.Add(i);
            }
            
            List<int> pandigitals = GeneratePandigitals(digits);
            
            pandigitals.Sort((a, b) => b.CompareTo(a)); // Sort in descending order
            
            foreach (int pandigital in pandigitals)
            {
                if (IsPrime(pandigital))
                {
                    Console.WriteLine("Largest n-digit pandigital prime: " + pandigital);
                    return;
                }
            }
            
            n--;
        }
    }
    
    public static List<int> GeneratePandigitals(List<int> digits)
    {
        List<int> pandigitals = new List<int>();
        GeneratePandigitalsHelper(digits, 0, pandigitals);
        return pandigitals;
    }
    
    private static void GeneratePandigitalsHelper(List<int> digits, int index, List<int> pandigitals)
    {
        if (index == digits.Count - 1)
        {
            pandigitals.Add(ConcatenateDigits(digits));
            return;
        }
        
        for (int i = index; i < digits.Count; i++)
        {
            Swap(digits, index, i);
            GeneratePandigitalsHelper(digits, index + 1, pandigitals);
            Swap(digits, index, i); // Backtrack
        }
    }
    
    private static int ConcatenateDigits(List<int> digits)
    {
        int result = 0;
        foreach (int digit in digits)
        {
            result = result * 10 + digit;
        }
        return result;
    }
    
    private static void Swap(List<int> digits, int i, int j)
    {
        int temp = digits[i];
        digits[i] = digits[j];
        digits[j] = temp;
    }
    
    private static bool IsPrime(int number)
    {
        if (number < 2)
        {
            return false;
        }
        
        for (int i = 2; i <= Math.Sqrt(number); i++)
        {
            if (number % i == 0)
            {
                return false;
            }
        }
        
        return true;
    }
}
