using System;

public class PandigitalNumber
{
    public static long FindLargestPandigitalNumber()
    {
        long largestPandigital = 0;

        // Start from 9876 as the highest possible 4-digit number
        for (int i = 9876; i >= 9182; i--)
        {
            // Concatenate the products of i with (1, 2, ..., n)
            long concatenatedProduct = ConcatenateProducts(i, 2);

            // Check if the concatenated product is pandigital and larger than the previous largest
            if (IsPandigital(concatenatedProduct) && concatenatedProduct > largestPandigital)
            {
                largestPandigital = concatenatedProduct;
            }
        }

        return largestPandigital;
    }

    private static long ConcatenateProducts(int number, int n)
    {
        string concatenatedProduct = string.Empty;

        for (int i = 1; i <= n; i++)
        {
            concatenatedProduct += (number * i).ToString();
        }

        return long.Parse(concatenatedProduct);
    }

    private static bool IsPandigital(long number)
    {
        string pandigitalString = number.ToString();

        if (pandigitalString.Length != 9)
        {
            return false;
        }

        for (int i = 1; i <= 9; i++)
        {
            if (!pandigitalString.Contains(i.ToString()))
            {
                return false;
            }
        }

        return true;
    }

    public static void Main(string[] args)
    {
        long largestPandigital = FindLargestPandigitalNumber();
        Console.WriteLine("Largest Pandigital Number: " + largestPandigital);
    }
}
