using System;

class Program
{
    // A function to check if a number is prime or not
    static bool IsPrime(long n)
    {
        // Corner cases
        if (n <= 1) return false;
        if (n <= 3) return true;

        // This is checked so that we can skip 
        // middle five numbers in below loop
        if (n % 2 == 0 || n % 3 == 0) return false;

        for (long i = 5; i * i <= n; i = i + 6)
            if (n % i == 0 || n % (i + 2) == 0)
                return false;

        return true;
    }

    // A function to find the largest prime factor of a given number
    static long LargestPrimeFactor(long n)
    {
        // Initialize the maximum prime factor
        long maxPrime = -1;

        // Print the number of 2s that divide n
        while (n % 2 == 0)
        {
            maxPrime = 2;
            n >>= 1; // equivalent to n /= 2
        }

        // n must be odd at this point, so we can skip 
        // one element (Note i = i +2)
        for (long i = 3; i <= Math.Sqrt(n); i += 2)
        {
            while (n % i == 0)
            {
                maxPrime = i;
                n = n / i;
            }
        }

        // This condition is to handle the case when n 
        // is a prime number greater than 2
        if (n > 2)
            maxPrime = n;

        return maxPrime;
    }

    static void Main(string[] args)
    {
        long n = 600851475143;
        Console.WriteLine(LargestPrimeFactor(n));
    }
}
