using System;
using System.Collections.Generic;

class Program
{
    static void Main(string[] args)
    {
        long n = 800800L;
        long result = CountHybridIntegers(n);
        Console.WriteLine("C(" + n + ") = " + result);
    }

    static long CountHybridIntegers(long n)
    {
        List<long> primes = SieveOfEratosthenes((int)Math.Sqrt(n));
        long hybridCount = 0;

        for (int i = 0; i < primes.Count; i++)
        {
            for (int j = i + 1; j < primes.Count; j++)
            {
                long hybridInteger = (long)Math.Pow(primes[i], primes[j]) * (long)Math.Pow(primes[i], primes[j]);
                if (hybridInteger <= n)
                    hybridCount++;
            }
        }

        return hybridCount;
    }

    static List<long> SieveOfEratosthenes(int n)
    {
        bool[] isPrime = new bool[n + 1];
        for (int i = 2; i <= n; i++)
            isPrime[i] = true;

        for (int p = 2; p * p <= n; p++)
        {
            if (isPrime[p] == true)
            {
                for (int i = p * p; i <= n; i += p)
                    isPrime[i] = false;
            }
        }

        List<long> primes = new List<long>();
        for (int i = 2; i <= n; i++)
        {
            if (isPrime[i])
                primes.Add(i);
        }

        return primes;
    }
}
